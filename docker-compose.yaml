version: '2'

networks:
  ros:
    driver: bridge

services:
  ros-master:
    image: osrf/ros:noetic-desktop-full
    command: stdbuf -o L roscore
    networks:
      - ros
    restart: always
  
  ros-bridge:
    build: 
      context: .
      dockerfile: docker/Dockerfile-ros-bridge
    depends_on:
      - ros-master
    environment:
      - "ROS_MASTER_URI=http://ros-master:11311"
    networks:
      - ros
    ports:
      - 9090:9090
    restart: always

  webviz:
    image: cruise/webviz:latest
    depends_on:
      - ros-bridge
    environment:
      - "ROS_MASTER_URI=http://ros-master:11311"
    networks:
      - ros
    ports:
      - 8080:8080
    restart: always

  gzweb:
    build:
      context: .
      dockerfile: docker/Dockerfile-gzweb
    depends_on:
      - ros-workspace
    environment:
      - "ROS_MASTER_URI=http://ros-master:11311"
      - "GAZEBO_MASTER_URI=http://ros-workspace:11345"
    networks:
      - ros
    ports:
      - 8181:8181
    restart: always
  
  ros-workspace:
    build: 
      context: .
      dockerfile: docker/Dockerfile-ros-workspace
    tty: true
    stdin_open: true
    init: true
    depends_on:
      - ros-master
    entrypoint: ["/bin/bash", "-ci", "cd ros_ws/ \ 
      && rosdep install --from-paths src --ignore-src -r -y && catkin build \
      && source devel/setup.bash && xvfb-run roslaunch example-package example.launch --wait"]
    environment:
      - "ROS_MASTER_URI=http://ros-master:11311"
    networks:
      - ros
    volumes:
      - ./:/ros_ws/src/
    restart: always

  ssh: 
    build: 
      context: .
      dockerfile: docker/Dockerfile-ssh
    depends_on:
      - ros-master
    tty: true
    stdin_open: true
    environment:
      - "ROS_MASTER_URI=http://ros-master:11311"
    networks:
      - ros
    ports:
      - 2222:22
    restart: always